/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.jto.tabletool


import org.apache.tinkerpop.gremlin.process.traversal.P
import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal
import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.`__`.*
import org.apache.tinkerpop.gremlin.structure.Vertex
import kotlinx.cli.*


fun <A> As(label: String?, vararg labels: String?): GraphTraversal<A, A> = start<A>().`as`(label, *labels)
fun <A> In(vararg labels: String?): GraphTraversal<A, Vertex> = start<A>().`in`(*labels)
fun <A> Is(predicate: P<A>): GraphTraversal<A, A> = start<A>().`is`(predicate)

enum class InputType {
    GraphDefinitionFile,
    Table
}

open class OutputHeaderColumn(
    val name: String,
    val alias: String? = name,
    val ignored: Boolean = false
)


fun main(args: Array<String>) {

    val parser = ArgParser("MFT definitions compare tool")
    parser.subcommands(CompareCommand(), ExtractOnlyCommand())
    parser.parse(args)

    /*    Function.ExtractDefsOnly -> {
            val workbook = StyledWorkbook()

            TableExcelWriter(
                definitionsTable,
                outputHeaderColumns,
                workbook,
                "mftDefinitions"
            ).createDefinitionsSheet()

            workbook.write(FileOutputStream(outputFile))
        }
    */
}






